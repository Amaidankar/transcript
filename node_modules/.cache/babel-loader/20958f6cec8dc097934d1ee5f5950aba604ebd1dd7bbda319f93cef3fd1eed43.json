{"ast":null,"code":"var _jsxFileName = \"/home/ifas/Ashish/youtube-transcript-frontend/src/screen/sotryCreator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Video } from \"lucide-react\";\nimport GoogleLogin from '../component/googleLogin';\nimport { postData } from '../api/api';\nimport UrlInput from '../component/urlInput';\nimport SelectInput from '../component/selectInput';\nimport StartButton from '../component/startButton';\nimport TextArea from '../component/textArea';\nimport UpgradeButton from '../component/upgradeButton';\nimport FeedBack from '../component/feedback';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StoryCreator() {\n  _s();\n  const [videoUrls, setVideoUrls] = useState(['']);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [summary, setSummary] = useState('');\n  const [transcript, setTranscript] = useState('');\n  const options = [{\n    value: 'new-story',\n    label: 'Create a new story',\n    isPaid: true\n  }, {\n    value: 'summary',\n    label: 'Create a summary',\n    isPaid: false\n  }, {\n    value: 'new-script',\n    label: 'Create a new script from videos',\n    isPaid: true\n  }];\n  // useEffect(() => {\n  //     const messageListener = (event) => {\n  //         if (event.origin !== window.location.origin) return;\n  //         console.log(\"event data:\", event.data); \n  //         if (event.data && event.data.type === 'videoUrl' && event.data.url) {\n  //             console.log(\"React app received video URL:\", event.data.url);\n  //             setVideoUrls([event.data.url]);\n  //         } else {\n  //             console.log(\"Received an irrelevant message:\", event.data);\n  //         }\n  //     };\n  //     window.addEventListener('message', messageListener);\n  //     return () => {\n  //         window.removeEventListener('message', messageListener);\n  //     };\n  // }, []);\n  // useEffect(() => {\n  //     // Ensure Chrome runtime API is available (only in extension context)\n  //     if (chrome.runtime?.sendMessage) {\n  //         // Ask the background script to get the current URL\n  //         chrome.runtime.sendMessage({ action: \"getCurrentURL\" }, (response) => {\n  //             if (response && response.url) {\n  //                 setVideoUrls(response.url); // Update the state with the received URL\n  //             } else {\n  //                 console.warn(\"No URL received or response is invalid.\");\n  //             }\n  //         });\n  //     } else {\n  //         console.error(\"Chrome runtime is not available.\");\n  //     }\n  // }, []);\n  const isExtensionEnv = typeof chrome !== \"undefined\" && chrome.runtime;\n  useEffect(() => {\n    if (isExtensionEnv) {\n      chrome.runtime.sendMessage({\n        action: \"getCurrentURL\"\n      }, response => {\n        if (response !== null && response !== void 0 && response.url) {\n          setVideoUrls(response.url);\n        }\n      });\n    } else {\n      console.log(\"Running outside Chrome extension, skipping chrome.runtime calls.\");\n    }\n  }, []);\n  useEffect(() => {\n    if (videoUrls[0]) {\n      getTranscript();\n    }\n  }, [videoUrls]);\n  const getYouTubeVideoId = url => {\n    const regex = /[?&]v=([^&]+)/;\n    const match = url.match(regex);\n    return match ? match[1] : null;\n  };\n  const videoId = getYouTubeVideoId(videoUrls[0]);\n  const handleVideoUrlChange = (index, value) => {\n    const updatedUrls = [...videoUrls];\n    updatedUrls[index] = value;\n    setVideoUrls(updatedUrls);\n  };\n  const addVideoUrl = () => {\n    if (videoUrls.length < 3) setVideoUrls([...videoUrls, '']);\n  };\n  const removeVideoUrl = index => {\n    const updatedUrls = videoUrls.filter((_, i) => i !== index);\n    setVideoUrls(updatedUrls);\n  };\n  const handelSelectedOption = e => {\n    setSelectedOption(e.target.value);\n  };\n  const vidoeSummary = async () => {\n    console.log(\"trascriot\", transcript);\n    try {\n      const payload = {\n        youtube_id: videoId,\n        user_id: 'bipin',\n        transcript: transcript\n      };\n      const getSummary = await postData('/get-summary', payload);\n      setSummary(getSummary);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getTranscript = async () => {\n    try {\n      const payload = {\n        youtube_id: videoId\n      };\n      const getScript = await postData('/get-transcript', payload);\n      if (getScript !== null && getScript !== void 0 && getScript.data) {\n        setSummary(getScript === null || getScript === void 0 ? void 0 : getScript.data);\n        setTranscript(getScript === null || getScript === void 0 ? void 0 : getScript.data);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleStart = () => {\n    setIsProcessing(true);\n    if (selectedOption === 'new-story') {\n      setTimeout(() => {\n        setIsProcessing(false);\n      }, 2000);\n    }\n    if (selectedOption === 'summary') {\n      setTimeout(() => {\n        setIsProcessing(false);\n        vidoeSummary();\n      }, 2000);\n    } else if (selectedOption === 'new-script') {\n      setTimeout(() => {\n        setIsProcessing(false);\n        getTranscript();\n      }, 2000);\n    }\n  };\n  const handleCopy = () => {\n    navigator.clipboard.writeText(summary);\n  };\n  const handleDownload = () => {\n    const blob = new Blob([summary], {\n      type: 'text/plain'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'summary.txt';\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"story-creator-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center p-4 main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card shadow-lg\",\n        style: {\n          maxWidth: '400px',\n          width: '100%',\n          minHeight: '600px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header text-white d-flex justify-content-between align-items-center py-4 px-4\",\n          children: [/*#__PURE__*/_jsxDEV(Video, {\n            className: \"text-light me-2\",\n            style: {\n              height: '1.5rem',\n              width: '1.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-0\",\n            children: \"Free YouTube Summarizer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Create new content from videos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(UrlInput, {\n            videoUrls: videoUrls,\n            handleVideoUrlChange: handleVideoUrlChange,\n            removeVideoUrl: removeVideoUrl,\n            addVideoUrl: addVideoUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"mx-1 border border-secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n            handelSelectedOption: handelSelectedOption,\n            selectedOption: selectedOption,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n            handleStart: handleStart,\n            selectedOption: selectedOption,\n            isProcessing: isProcessing,\n            videoUrls: videoUrls\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), summary && /*#__PURE__*/_jsxDEV(TextArea, {\n            summary: summary,\n            handleCopy: handleCopy,\n            handleDownload: handleDownload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UpgradeButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FeedBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-border gradient-background\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 d-flex justify-content-center gap-3 text-muted small p-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: \"btn text-light\",\n              children: \"Privacy Policy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: \"btn text-light\",\n              children: \"Terms and Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n}\n_s(StoryCreator, \"LNQpwpMYdY0+RQPG3vT92Hor974=\");\n_c = StoryCreator;\nexport default StoryCreator;\nvar _c;\n$RefreshReg$(_c, \"StoryCreator\");","map":{"version":3,"names":["React","useState","useEffect","Video","GoogleLogin","postData","UrlInput","SelectInput","StartButton","TextArea","UpgradeButton","FeedBack","jsxDEV","_jsxDEV","StoryCreator","_s","videoUrls","setVideoUrls","selectedOption","setSelectedOption","isProcessing","setIsProcessing","summary","setSummary","transcript","setTranscript","options","value","label","isPaid","isExtensionEnv","chrome","runtime","sendMessage","action","response","url","console","log","getTranscript","getYouTubeVideoId","regex","match","videoId","handleVideoUrlChange","index","updatedUrls","addVideoUrl","length","removeVideoUrl","filter","_","i","handelSelectedOption","e","target","vidoeSummary","payload","youtube_id","user_id","getSummary","error","getScript","data","handleStart","setTimeout","handleCopy","navigator","clipboard","writeText","handleDownload","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","className","children","style","maxWidth","width","minHeight","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ifas/Ashish/youtube-transcript-frontend/src/screen/sotryCreator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Video } from \"lucide-react\"\nimport GoogleLogin from '../component/googleLogin';\nimport { postData } from '../api/api';\nimport UrlInput from '../component/urlInput';\nimport SelectInput from '../component/selectInput';\nimport StartButton from '../component/startButton';\nimport TextArea from '../component/textArea';\nimport UpgradeButton from '../component/upgradeButton';\nimport FeedBack from '../component/feedback';\nfunction StoryCreator() {\n    const [videoUrls, setVideoUrls] = useState(['']);\n    const [selectedOption, setSelectedOption] = useState('');\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [summary, setSummary] = useState('');\n    const [transcript, setTranscript] = useState('');\n    const options = [\n        { value: 'new-story', label: 'Create a new story', isPaid: true },\n        { value: 'summary', label: 'Create a summary', isPaid: false },\n        { value: 'new-script', label: 'Create a new script from videos', isPaid: true },\n    ];\n    // useEffect(() => {\n    //     const messageListener = (event) => {\n    //         if (event.origin !== window.location.origin) return;\n    //         console.log(\"event data:\", event.data); \n    //         if (event.data && event.data.type === 'videoUrl' && event.data.url) {\n    //             console.log(\"React app received video URL:\", event.data.url);\n    //             setVideoUrls([event.data.url]);\n    //         } else {\n    //             console.log(\"Received an irrelevant message:\", event.data);\n    //         }\n    //     };\n    //     window.addEventListener('message', messageListener);\n    //     return () => {\n    //         window.removeEventListener('message', messageListener);\n    //     };\n    // }, []);\n    // useEffect(() => {\n    //     // Ensure Chrome runtime API is available (only in extension context)\n    //     if (chrome.runtime?.sendMessage) {\n    //         // Ask the background script to get the current URL\n    //         chrome.runtime.sendMessage({ action: \"getCurrentURL\" }, (response) => {\n    //             if (response && response.url) {\n    //                 setVideoUrls(response.url); // Update the state with the received URL\n    //             } else {\n    //                 console.warn(\"No URL received or response is invalid.\");\n    //             }\n    //         });\n    //     } else {\n    //         console.error(\"Chrome runtime is not available.\");\n    //     }\n    // }, []);\n    const isExtensionEnv = typeof chrome !== \"undefined\" && chrome.runtime;\n\n    useEffect(() => {\n        if (isExtensionEnv) {\n            chrome.runtime.sendMessage({ action: \"getCurrentURL\" }, (response) => {\n                if (response?.url) {\n                    setVideoUrls(response.url);\n                }\n            });\n        } else {\n            console.log(\"Running outside Chrome extension, skipping chrome.runtime calls.\");\n        }\n    }, []);\n    \n\n    useEffect(() => {\n        if (videoUrls[0]) {\n            getTranscript();\n        }\n    }, [videoUrls]);\n\n\n    const getYouTubeVideoId = (url) => {\n        const regex = /[?&]v=([^&]+)/;\n        const match = url.match(regex);\n        return match ? match[1] : null;\n    };\n\n    const videoId = getYouTubeVideoId(videoUrls[0]);\n\n    const handleVideoUrlChange = (index, value) => {\n        const updatedUrls = [...videoUrls];\n        updatedUrls[index] = value;\n        setVideoUrls(updatedUrls);\n    };\n\n    const addVideoUrl = () => {\n        if (videoUrls.length < 3) setVideoUrls([...videoUrls, '']);\n    };\n\n    const removeVideoUrl = (index) => {\n        const updatedUrls = videoUrls.filter((_, i) => i !== index);\n        setVideoUrls(updatedUrls);\n    };\n\n    const handelSelectedOption = (e) => {\n        setSelectedOption(e.target.value);\n    };\n\n    const vidoeSummary = async () => {\n        console.log(\"trascriot\", transcript);\n        try {\n            const payload = {\n                youtube_id: videoId,\n                user_id: 'bipin',\n                transcript: transcript,\n            }\n            const getSummary = await postData('/get-summary', payload);\n            setSummary(getSummary);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const getTranscript = async () => {\n        try {\n            const payload = { youtube_id: videoId, };\n            const getScript = await postData('/get-transcript', payload);\n            if (getScript?.data) {\n                setSummary(getScript?.data);\n                setTranscript(getScript?.data);\n\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const handleStart = () => {\n        setIsProcessing(true)\n        if (selectedOption === 'new-story') {\n            setTimeout(() => {\n                setIsProcessing(false);\n            }, 2000);\n        }\n        if (selectedOption === 'summary') {\n            setTimeout(() => {\n                setIsProcessing(false);\n                vidoeSummary();\n            }, 2000);\n        }\n        else if (selectedOption === 'new-script') {\n            setTimeout(() => {\n                setIsProcessing(false);\n                getTranscript();\n            }, 2000);\n        }\n    };\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(summary);\n    };\n\n    const handleDownload = () => {\n        const blob = new Blob([summary], { type: 'text/plain' });\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.download = 'summary.txt';\n        link.click();\n    };\n\n    return (\n        <div className=\"story-creator-container\">\n            <div className=\"min-vh-100 d-flex justify-content-center align-items-center p-4 main\">\n                <div className=\"card shadow-lg\" style={{ maxWidth: '400px', width: '100%', minHeight: '600px' }}>\n                    <div className=\"card-header text-white d-flex justify-content-between align-items-center py-4 px-4\">\n                        <Video className=\"text-light me-2\" style={{ height: '1.5rem', width: '1.5rem' }} />\n                        <h5 className=\"mb-0\">Free YouTube Summarizer</h5>\n                        <GoogleLogin />\n                    </div>\n                    <div className=\"card-body p-4\">\n                        <p className='text-muted mb-4'><small>Create new content from videos</small></p>\n                        <UrlInput\n                            videoUrls={videoUrls}\n                            handleVideoUrlChange={handleVideoUrlChange}\n                            removeVideoUrl={removeVideoUrl}\n                            addVideoUrl={addVideoUrl}\n                        />\n                        <hr className='mx-1 border border-secondary' />\n                        <SelectInput\n                            handelSelectedOption={handelSelectedOption}\n                            selectedOption={selectedOption}\n                            options={options}\n                        />\n                        <StartButton\n                            handleStart={handleStart}\n                            selectedOption={selectedOption}\n                            isProcessing={isProcessing}\n                            videoUrls={videoUrls}\n                        />\n\n                        {summary && (\n                            <TextArea\n                                summary={summary}\n                                handleCopy={handleCopy}\n                                handleDownload={handleDownload}\n                            />\n                        )}\n                    </div>\n                    <UpgradeButton />\n                    <FeedBack />\n                    <div className=\"footer-border gradient-background\">\n                        <div className=\"w-100 d-flex justify-content-center gap-3 text-muted small p-0\">\n                            <a href=\"#\" className=\"btn text-light\">Privacy Policy</a>\n                            <a href=\"#\" className=\"btn text-light\">Terms and Conditions</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default StoryCreator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}