{"ast":null,"code":"import axiosInstance from'./axios';//Post \nexport const postData=async(endpoint,data)=>{try{const response=await axiosInstance.post(endpoint,data);return response.data;}catch(error){console.error('Error:',error);throw error;}};//get\nexport const getData=async function(endpoint){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await axiosInstance.get(endpoint,{params});return response.data;}catch(error){console.error('Error:',error);throw error;}};","map":{"version":3,"names":["axiosInstance","postData","endpoint","data","response","post","error","console","getData","params","arguments","length","undefined","get"],"sources":["/home/ifas/Ashish/youtube-transcript-frontend/src/api/api.js"],"sourcesContent":["import axiosInstance from './axios';\n\n//Post \nexport const postData = async (endpoint, data) => {\n  try {\n    const response = await axiosInstance.post(endpoint, data);\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\n\n//get\nexport const getData = async (endpoint, params = {}) => {\n  try {\n    const response = await axiosInstance.get(endpoint, { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};"],"mappings":"AAAA,MAAO,CAAAA,aAAa,KAAM,SAAS,CAEnC;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,IAAI,GAAK,CAChD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,aAAa,CAACK,IAAI,CAACH,QAAQ,CAAEC,IAAI,CAAC,CACzD,MAAO,CAAAC,QAAQ,CAACD,IAAI,CACtB,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAC9B,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,OAAO,CAAG,cAAAA,CAAON,QAAQ,CAAkB,IAAhB,CAAAO,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACjD,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAJ,aAAa,CAACa,GAAG,CAACX,QAAQ,CAAE,CAAEO,MAAO,CAAC,CAAC,CAC9D,MAAO,CAAAL,QAAQ,CAACD,IAAI,CACtB,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAC9B,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}